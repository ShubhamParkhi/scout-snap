{"version":3,"file":"component---src-pages-index-tsx-14ba495fcaf63552706d.js","mappings":"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","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { MetamaskActions, MetaMaskContext } from '../hooks';\nimport {\n  connectSnap,\n  getSnap,\n  sendHello,\n  shouldDisplayReconnectButton,\n} from '../utils';\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  SendHelloButton,\n  Card,\n} from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: 7.6rem;\n  margin-bottom: 7.6rem;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n  ${({ theme }) => theme.mediaQueries.small} {\n    font-size: ${({ theme }) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Notice = styled.div`\n  background-color: ${({ theme }) => theme.colors.background.alternative};\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\n  color: ${({ theme }) => theme.colors.text.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n  ${({ theme }) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({ theme }) => theme.colors.error.muted};\n  border: 1px solid ${({ theme }) => theme.colors.error.default};\n  color: ${({ theme }) => theme.colors.error.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst Index = () => {\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  const handleConnectClick = async () => {\n    try {\n      await connectSnap();\n      const installedSnap = await getSnap();\n\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleSendHelloClick = async () => {\n    try {\n      await sendHello();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  return (\n    <Container>\n      <Heading>\n        Welcome to <Span>Contract Insights Snap by Kleros</Span>\n      </Heading>\n      <CardContainer>\n        {state.error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {state.error.message}\n          </ErrorMessage>\n        )}\n        {!state.isFlask && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton />,\n            }}\n            fullWidth\n          />\n        )}\n      \n        {shouldDisplayReconnectButton(state.installedSnap) && (\n          <Card\n            content={{\n              title: 'Reconnect',\n              description:\n                'Click to update connect to Metamask Flask and update your Snaps',\n              button: (\n                <ReconnectButton\n                  onClick={handleConnectClick}\n                  disabled={!state.installedSnap}\n                />\n              ),\n            }}\n            disabled={!state.installedSnap}\n          />\n        )}\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["Container","styled","displayName","componentId","_ref","theme","mediaQueries","small","Heading","Span","props","colors","primary","default","CardContainer","_ref2","fontSizes","large","_ref3","_ref4","text","ErrorMessage","_ref5","background","alternative","_ref6","border","_ref7","_ref8","radii","_ref9","_ref10","error","muted","_ref11","_ref12","_ref13","_ref14","Index","state","dispatch","useContext","MetaMaskContext","_jsxs","children","_jsx","message","isFlask","Card","content","title","description","button","InstallFlaskButton","fullWidth","shouldDisplayReconnectButton","installedSnap","ReconnectButton","onClick","async","connectSnap","getSnap","type","MetamaskActions","payload","e","console","disabled"],"sourceRoot":""}